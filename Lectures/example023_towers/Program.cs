void Towers(string with = "1", string on = "3", string some = "2", int count = 3)
{
 if (count > 1) Towers(with, some, on, count - 1);
 Console.WriteLine($"{with} >> {on}");
 if (count > 1) Towers(some, on, with, count - 1);
}

Towers();
/* Итак, рекурсия сначала нам помогла с математикой, затем позволила обойти все папки на
компьютере. Теперь пришло время поиграть с рекурсией.
Есть замечательная детская игра «Ханойские башни». Суть её заключается в том, что у нас
есть некоторая башенка с определённым количеством блинчиков и шпилей. Далее мы должны
каким-то образом переместить нужный блин, например, на третий шпиль. Ура, мы победили.
На следующем этапе можем взять, например, четыре блина, пять и так далее.
Количество этих блинчиков может быть большим. Чем больше блинов, тем дольше будет идти
игра. И что самое важное, так проще запутаться. Натравим на эту игру рекурсию и решим
задачу.
Как и в предыдущем примере, весь код я уже написал за кулисами. Сделаем шпиль рабочим и
возьмём из него текущий блинчик. Вторым аргументом передадим шпиль, на котором должна
оказаться пирамидка.
Далее дадим название нашему промежуточному шпилю, потому что всего их по умолчанию
три, и укажем, какое количество блинов есть всего. Затем запустим метод и посмотрим, что
конкретно потребуется выполнить для трёх пирамидок.
Итак, мы должны с 1 шпиля переместить блины на 3, а с 1 — на 2. Соответственно, с 1 — на 3, с
1 — на 2. Дальше с 3 — на 2, с 1 — на 3. С 3 — на 2, с 1 — на 3, далее со 2 — на 1, со 2 — на 3. Со 2
— на 1, со 2 — на 3. И далее с 1 — на 3. Как видите, наш алгоритм отработал.
Аналогичным образом мы можем взять, например, четыре шпиля, указать в качестве
аргумента 4 и запустить — количество действий не на много увеличится. Если у нас будет,
например, пять блинов, то количество действий окажется очень большим. И если решать эту
задачу вручную, этот процесс окажется долгим, на каждом этапе будет возникать
возможность запутаться, сделать что-то не то. Поэтому придётся делать лишние
переставления, но в случае рекурсии этот вариант — беспроигрышный. Три строчки кода дают
9
нам решения для трёх шпилей и любого количества блинов. Поэтому используйте этот способ,
если он вам удобен */